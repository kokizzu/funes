diff --git a/src/http/ngx_http_upstream.c b/src/http/ngx_http_upstream.c
index f5db65338..f69d1dce0 100644
--- a/src/http/ngx_http_upstream.c
+++ b/src/http/ngx_http_upstream.c
@@ -2724,10 +2724,6 @@ ngx_http_upstream_intercept_errors(ngx_http_request_t *r,
 
             if (r->cache) {
 
-                if (u->headers_in.no_cache || u->headers_in.expired) {
-                    u->cacheable = 0;
-                }
-
                 if (u->cacheable) {
                     time_t  valid;
 
@@ -2822,10 +2818,6 @@ ngx_http_upstream_process_headers(ngx_http_request_t *r, ngx_http_upstream_t *u)
 
     umcf = ngx_http_get_module_main_conf(r, ngx_http_upstream_module);
 
-    if (u->headers_in.no_cache || u->headers_in.expired) {
-        u->cacheable = 0;
-    }
-
     if (u->headers_in.x_accel_redirect
         && !(u->conf->ignore_headers & NGX_HTTP_UPSTREAM_IGN_XA_REDIRECT))
     {
@@ -4833,6 +4825,7 @@ ngx_http_upstream_process_cache_control(ngx_http_request_t *r,
         || ngx_strlcasestrn(start, last, (u_char *) "private", 7 - 1) != NULL)
     {
         u->headers_in.no_cache = 1;
+        u->cacheable = 1;
         return NGX_OK;
     }
 
@@ -4857,12 +4850,13 @@ ngx_http_upstream_process_cache_control(ngx_http_request_t *r,
                 continue;
             }
 
-            u->cacheable = 0;
+            u->cacheable = 1;
             return NGX_OK;
         }
 
         if (n == 0) {
             u->headers_in.no_cache = 1;
+            u->cacheable = 1;
             return NGX_OK;
         }
 
